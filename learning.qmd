---
title: "資料"
---
### プログラミング
- **[VSCodeの使い方](learning/vscode.qmd)**<br/>
非常に軽量でありながら様々なOS・ファイル形式に対応する優れたエディタ、**Visual Studio Code** (以下VSCode)の使い方についてまとめました。
-  **[git入門](learning/git.qmd)**<br/>
ドキュメントやソースコードのバージョン管理用ツール、gitをVSCodeを使って簡単に利用する方法をまとめました。

### C++の解説記事
C++の解説記事をいくつか Qiita 上にて公開中です。特に以下の記事は、数値解析の際などに参考になるかもしれません。

- [C++で常微分方程式入門](https://www.google.com/url?q=https%3A%2F%2Fqiita.com%2Fhmito%2Fitems%2F483445ac0d42fb4428a5&sa=D&sntz=1&usg=AOvVaw25JL7s9nzMo4-QzVKxrfPG)<br/>
常微分方程式の数値解析用ライブラリ `boost::odeint` についての解説記事です。簡単につかえて、計算精度も計算速度もしっかり制御できる、非常に良くできたライブラリです。ルンゲクッタ法を自分で書くぐらいなら、ぜひ使うべきライブラリです。

- [C++20 スマートポインタ入門](https://qiita.com/hmito/items/9b35a2438a8b8ee4b5af)<br/>
C++のメモリ管理の負担を軽減する、スマートポインタについての解説記事です。もし普段、動的メモリ確保、すなわち`malloc/free`や`new/delete`を書くことがあれば、この記事がお役に立てるかもしれません。C++11以降進化を続けてきたスマートポインタのC++20時代の使い方をまとめています。

- [それ、ポインタ使わなくてもできるよ：Ｃ言語のポインタとC++の流儀](https://qiita.com/hmito/items/44925fca9fca74e78f61)<br/>
ポインタに注目して書いた、C言語ユーザーやC++ビギナーへのC++入門記事です。

- [C++で効率よく重複のない乱数列を生成する](https://qiita.com/hmito/items/9f4bdc8442b6f6b3c7bc)<br/>
実際に利用する場合に最も速いのはどうすべきか？の視点から、重複なし乱数列の生成アルゴリズムについて解説しています 
