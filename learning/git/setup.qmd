---
title: gitの環境準備
format:
  html:
    toc: true
---

## アプリケーションの用意
必要なアプリケーションを二つ、用意します。

一つは、**Visual Studio Code** (以下VSCode)です。VSCodeは、エディタ（ソースコードを書くためのソフト）として極めて優秀ですが、ここでは、gitの管理用に用意します。

::: {.panel-tabset}
### Windowsの場合
スタートメニューで**Power Shell**と検索し、出てきたアプリを実行してください。開いた画面で、以下のコマンドを入力し、最後にエンターキーを推してください。

```bash
winget install Microsoft.VisualStudioCode
```

![](src/powershell_vscode.png)

:::{.callout-note}
上手くいかなければ、以下のWebサイトからもインストール可能です。<br/>
[https://code.visualstudio.com](https://code.visualstudio.com/)
:::

### Macの場合
[homebrew](https://brew.sh)をインストール後、ターミナルで以下のコマンドを実行してください。

```bash
brew install --cask visual-studio-code
```

:::{.callout-note}
上手くいかなければ、以下のWebサイトからもインストール可能です。<br/>
[https://code.visualstudio.com](https://code.visualstudio.com/)
:::

:::

もう一つは、gitを操作するために必要な**Git**アプリです。

::: {.panel-tabset}

### Windowsの場合
**Power Shell**上で、以下のコマンドを入力し、最後にエンターキーを推してください。

```bash
winget install Git.Git
```

:::{.callout-note}
上手くいかなければ、以下のWebサイトからもインストール可能です。<br/>
[https://git-scm.com](https://git-scm.com/)
:::

### Macの場合
ターミナルで以下のコマンドを実行してください。

```bash
brew install git
```

:::{.callout-note}
上手くいかなければ、以下のWebサイトからもインストール可能です。<br/>
[https://git-scm.com](https://git-scm.com/)
:::

:::

## Visaual Studio Codeを設定する
次に、VSCodeでGitを使うための設定を行います。

VSCodeは、拡張機能と呼ばれるアドインを入れることで、より使いやすくなります。まず、拡張機能**Git Graph**を入れましょう。これは、Gitの更新履歴をより視覚的に分かりやすくしてくれます。左側のメニューから拡張機能ボタン（4つの四角マーク）を選びdwqwます。検索窓で**Git Graph**を検索し、出てきた一番上の機能を拡張機能をインストールを押してください。dvs

![](rsc/vscode_extension.png)

もし、日本語で操作がしたければ、同様に拡張機能の検索窓で「Japanese」と入れて出てくる拡張機能**Japanese Language Pack for Visual Studio Code**をインストールし、右下のポップアップからVSCodeを再起動すると良いです。

:::{.callout-note}
上記拡張機能でうまく日本語化できない場合、VSCode上部の検索窓に 「> display」と入力し、出てきた候補から「Configure Display Language」を選択し、日本語を選んでみてください。



## アカウントの用意
まずは、gitサーバーの

