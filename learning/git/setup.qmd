---
title: 環境構築
format:
  html:
    toc: true
execute: 
  eval: false
---
```{r}
#| echo: false
#| eval: false
```

## gitとgitクライアントの用意
まず、gitを操作するために必要な**Git**アプリを用意します。[公式Webサイト](https://git-scm.com/)からインストーラーをダウンロードしてきてもよいですが、以下のような`winget`（Windows）あるいは`brew`（macOS）を使ったインストールが簡単です。

::: {.panel-tabset}

### Windowsの場合
スタートメニューで**Power Shell**と検索し、出てきたアプリを実行してください。開いた画面で、以下のコマンドを入力し、最後にエンターキーをおしてください。

```{bash}
winget install Git.Git
```

### Macの場合
[homebrew](https://brew.sh)をインストール後、ターミナルで以下のコマンドを入力し、最後にエンターキーをおしてください。

```{bash}
brew install git
```

:::

:::{.callout-note}
上手くいかなければ、以下のWebサイトからもインストール可能です。<br/>
[https://git-scm.com](https://git-scm.com/)
:::

次に、gitクライアントです。この解説記事では、**Visual Studio Code** (以下VSCode)を使用します。VSCodeは、エディタ（ソースコードを書くためのソフト）として極めて優秀ですが、ここでは、gitの管理用に用意します。

[別記事（VSCodeの使い方）](../vscode.qmd)としてまとめてありますので、この記事を参考にインストールしてください。

## VSCodeの設定
次に、VSCodeでGitを使うための設定を行います。

VSCodeは、拡張機能と呼ばれるアドインを入れることで、より使いやすくなります。まず、拡張機能**Git Graph**を入れましょう。これは、Gitの更新履歴をより視覚的に分かりやすくしてくれます。左側のメニューから拡張機能ボタン（4つの四角マーク）を選びdwqwます。検索窓で**Git Graph**を検索し、出てきた一番上の機能を拡張機能をインストールを押してください。

![](rsc/vscode_extension.png)



## アカウントの用意
最後に、ホスティングサービスであるGitHubのアカウントを作ります。

[GitHub公式サイト](https://github.com/)を開き、右上の「Sign up」を押して




```{=html}
<div class="prev-next-link">
  <a class="prev-link" href="concept.html">
    <p class="prev-next-label">prev</p>
    <p>gitの考え方</p>
  </a>
  <a class="next-link" href="commit.html">
    <p class="prev-next-label">next</p>
    <p>コミットと履歴</p>
  </a>
</div>
```
